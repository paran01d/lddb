version: '3.8'

services:
  lddb:
    build: .
    image: lddb:latest
    container_name: lddb-app
    restart: unless-stopped
    expose:
      - "8080"
    volumes:
      # Persist database outside container
      - lddb_data:/app/data
      # Mount database file to data directory
      - ./collection.db:/app/collection.db
    environment:
      - GIN_MODE=release
      - TZ=UTC
    networks:
      - lddb-network
    labels:
      - "com.docker.compose.project=lddb"
      - "description=LaserDisc Collection Manager"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/collection"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - caddy

  caddy:
    image: caddy:2-alpine
    container_name: lddb-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8090:8090"  # HTTP fallback
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - lddb-network
    labels:
      - "description=Caddy reverse proxy with automatic HTTPS"

volumes:
  lddb_data:
    driver: local
    labels:
      - "description=LDDB SQLite database storage"
  caddy_data:
    driver: local
    labels:
      - "description=Caddy data directory for certificates"
  caddy_config:
    driver: local
    labels:
      - "description=Caddy configuration directory"

networks:
  lddb-network:
    driver: bridge
    labels:
      - "description=LDDB application network"